# bot_webhook.py
import os
from flask import Flask, request
import telebot

# –í—Å—Ç–∞–≤–ª–µ–Ω—ã —Ç–≤–æ–π —Ç–æ–∫–µ–Ω –∏ ID –≥—Ä—É–ø–ø—ã
TOKEN = "7592969962:AAFavNdgwxlyzf-oPRvVeDNLOzfPFjWrjbw"
GROUP_ID = -1002116032863

bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# --- –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–∏—ë–º–∞ –∑–∞—è–≤–∫–∏ (–∏–º—è -> —Ç–µ–ª–µ—Ñ–æ–Ω -> –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π) ---
def ask_phone(message, name):
    msg = bot.send_message(message.chat.id, "üìû –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    bot.register_next_step_handler(msg, get_phone, name)

def ask_comment(message, name, phone):
    msg = bot.send_message(message.chat.id, "‚úçÔ∏è –ö—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏—Ç–µ –∑–∞–¥–∞—á—É/–∞–¥—Ä–µ—Å:")
    bot.register_next_step_handler(msg, finish_request, name, phone)

def get_phone(message, name):
    phone = message.text.strip()
    ask_comment(message, name, phone)

def finish_request(message, name, phone):
    comment = message.text.strip()
    bot.send_message(message.chat.id, "‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞.")
    try:
        from datetime import datetime, timezone, timedelta
        tz = timezone(timedelta(hours=5))
        now = datetime.now(tz).strftime("%d.%m.%Y %H:%M")
    except:
        now = ""
    forward = (
        "üÜï –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞\n"
        f"üë§ –ò–º—è: {name}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n"
        f"üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}\n"
        f"üë§ –û—Ç: @{message.from_user.username or '‚Äî'} (id {message.from_user.id})\n"
        f"‚è∞ {now} (Asia/Tashkent)"
    )
    try:
        bot.send_message(GROUP_ID, forward)
    except Exception as e:
        # –µ—Å–ª–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–∞ –≤ –≥—Ä—É–ø–ø—É –Ω–µ —É–¥–∞–ª–∞—Å—å ‚Äî —Å–æ–æ–±—â–∏–º –≤ –ª–∏—á–∫—É –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é
        try:
            bot.send_message(message.chat.id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ –≤ –≥—Ä—É–ø–ø—É: {e}")
        except:
            pass

@bot.message_handler(commands=['start'])
def cmd_start(message):
    msg = bot.send_message(message.chat.id, "üëã –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?")
    bot.register_next_step_handler(msg, handle_name)

def handle_name(message):
    name = message.text.strip()
    if not name:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∏–º—è.")
        return
    ask_phone(message, name)

# --- Webhook endpoints ---
@app.route('/' + TOKEN, methods=['POST'])
def receive_update():
    json_str = request.get_data().decode('utf-8')
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return 'OK', 200

@app.route('/')
def sethook():
    # –ü—Ä–∏ –¥–µ–ø–ª–æ–µ Render –∑–∞–¥–∞—ë—Ç RENDER_EXTERNAL_URL ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë
    url = os.getenv("RENDER_EXTERNAL_URL") or os.getenv("SERVICE_URL") or ""
    if url:
        webhook_url = url.rstrip('/') + '/' + TOKEN
        try:
            bot.remove_webhook()
        except:
            pass
        bot.set_webhook(url=webhook_url)
        return f"Webhook set: {webhook_url}", 200
    return "No external URL set", 200

@app.route('/health')
def health():
    return "OK", 200

if __name__ == "__main__":
    # –ª–æ–∫–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∞
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
s